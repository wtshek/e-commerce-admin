// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}


model Store{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  userId String 
  billboards Billboard[]
  categories Category[]
  colors Color[]
  sizes Size[]
  products Product[]
  orders Order[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Billboard {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation( fields: [storeId], references: [id])
  storeId String @db.ObjectId
  categories Category[]
  label String
  imageUrl String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation( fields: [storeId], references: [id])
  storeId String @db.ObjectId
  billboardId String @db.ObjectId
  billboard Billboard @relation( fields: [billboardId], references: [id])
  products Product[]
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Size {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation( fields: [storeId], references: [id])
  storeId String @db.ObjectId
  name String
  value String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Color {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation( fields: [storeId], references: [id])
  storeId String @db.ObjectId
  name String
  value String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation( fields: [storeId], references: [id])
  storeId String @db.ObjectId
  category Category @relation( fields: [categoryId], references: [id])
  categoryId String @db.ObjectId
  name String
  price String // MongoDB doesn't support decimal right now
  isFeatured Boolean @default(false)
  isArchived Boolean @default(false)
  size Size @relation( fields: [sizeId], references: [id])
  sizeId String @db.ObjectId
  colorId String @db.ObjectId
  color Color @relation(fields: [colorId], references: [id])
  images Image[]
  orderItems OrderItem[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  productId String @db.ObjectId
  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  url String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Order {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  store Store @relation( fields: [storeId], references: [id])
  storeId String @db.ObjectId
  orderItems OrderItem[]
  isPaid Boolean @default(false)
  phone String @default("")
  address String @default("")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  orderId String @db.ObjectId
  order Order @relation( fields: [orderId], references: [id])
  productId String @db.ObjectId
  product Product @relation(fields: [productId], references: [id])
}